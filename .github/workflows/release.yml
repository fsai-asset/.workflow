on:
  workflow_call:
    secrets:
      PUBLISH_TOKEN:
        required: true

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup NPM cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm clean-install --prefer-offline --no-audit --no-fund
      - name: Install OS tool
        run: npm install --global platform-os-tool --no-audit --no-fund
      - name: Get version
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          REVISION=${{ github.run_number }}
          NEW_VERSION="$MAJOR.$MINOR.$REVISION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
      - name: Package with OS tool
        run: os package-tool . --revision ${{ github.run_number }}
      - name: Find package file
        id: find_package
        run: |
          PACKAGE=$(ls publish/*.zip | sort | tail -n 1)
          echo "package=$PACKAGE" >> $GITHUB_OUTPUT
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: v${{ steps.get_version.outputs.version }}
          body: |
            ${{ github.event.head_commit.message }}
          files: ${{ steps.find_package.outputs.package }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish GitHub Package
        run: |
          # PUBLISH_TOKEN currently set a dedicated PAT in BenThompson's account. Service account needs to be created.
          PACKAGE="${{ steps.find_package.outputs.package }}"
          unzip -o "$PACKAGE" -d extracted_package

          # Inject download link into README.md inside extracted_package
          VERSION=$(node -p "require('./package.json').version")
          PACKAGE_FILE=$(ls publish/*.zip | sort | tail -n 1)
          PACKAGE_NAME=$(basename "$PACKAGE_FILE")
          REPO_URL="https://github.com/${{ github.repository }}"
          DOWNLOAD_URL="$REPO_URL/releases/download/v$VERSION/$PACKAGE_NAME"
          echo "[Download $PACKAGE_NAME]($DOWNLOAD_URL)" > extracted_package/README.md

          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PUBLISH_TOKEN }}" > ~/.npmrc
          cd extracted_package
          npm publish --registry=https://npm.pkg.github.com/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}